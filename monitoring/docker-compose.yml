services:
  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    restart: unless-stopped
    user: '1000'
    ports:
     - '3002:3000'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`metrics.rpi.${DOMAIN}`)"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.tls.certresolver=myresolver"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources
      - "${RAID_MOUNT}/docker-volumes/grafana:/var/lib/grafana"
  
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    restart: unless-stopped
    user: '1000'
    volumes:
      - ./prometheus:/etc/prometheus
      - "${RAID_MOUNT}/docker-volumes/prometheus:/prometheus"
    # ports:
    #   - 9090:9090
  
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    # ports:
    #   - 9100:9100

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    depends_on:
      - redis
    command:
      - '-housekeeping_interval=15s'
      - '-docker_only=true'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cadvisor.rule=Host(`cadvisor.rpi.${DOMAIN}`)"
      - "traefik.http.routers.cadvidor.tls=true"
      - "traefik.http.routers.cadvisor.tls.certresolver=myresolver"
      - "traefik.http.routers.cadvisor.entrypoints=websecure"
      - "traefik.http.services.cadvisor.loadbalancer.server.port=8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    # ports:
    #   - 8082:8080
  
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - 6379:6379

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/loki.yaml
    volumes:
      - ./loki:/etc/loki

  promtail:
    image:  grafana/promtail:latest
    container_name: promtail
    depends_on:
      - loki
    command: -config.file=/etc/promtail/promtail.yaml
    volumes:
      - ./promtail:/etc/promtail
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
